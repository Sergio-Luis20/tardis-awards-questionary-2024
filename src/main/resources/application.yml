spring:
  application:
    name: TARDIS Awards Questionary
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
  jpa:
    database-platform: ${DATABASE_PLATFORM}
    hibernate:
      ddl-auto: update
    open-in-view: true
  servlet:
    multipart:
      max-request-size: 8MB
  devtools:
    restart:
      quiet-period: 2000
      poll-interval: 3000
  security:
    oauth2:
      client:
        registration:
          discord:
            client-id: ${DISCORD_AUTH_CLIENT_ID}
            client-secret: ${DISCORD_AUTH_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - identify
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Discord
        provider:
          discord:
            authorization-uri: https://discord.com/oauth2/authorize
            token-uri: https://discord.com/api/oauth2/token
            user-info-uri: https://discord.com/api/users/@me
            user-name-attribute: username

server:
  port: 8080
  error:
    include-stacktrace: never
jwt:
  private-key: classpath:private.key
  public-key: classpath:public.key
admin:
  ids: ${ADMIN_IDS}
discord:
  bot-token: ${DISCORD_AUTH_BOT_TOKEN}
  tardis-id: ${DISCORD_TARDIS_ID}
  redirect-uri: ${DISCORD_REDIRECT_URI}
  authenticated-uri: ${DISCORD_AUTHENTICATED_URI}
  scope: identify
frontend-origin: ${FRONTEND_ORIGIN}